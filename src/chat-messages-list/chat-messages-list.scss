#chat-ui,
// This element is a replica of the chat ui, all messages get appended in 'trash' first so we
// can calculate its height, then we can animate it from 0 to n to achieve a smooth bubble
// append
#trash {
  position: absolute;
  bottom: (60px);
  padding: 8px;
  background-color: rgb(41, 41, 41);
  max-height: 
    calc(100% - (120px + env(safe-area-inset-top)));

  display: flex;
  flex-direction: column-reverse;
  
  box-sizing: border-box;
  overflow-y: scroll;

  right: 0;
  width: calc(100% - 400px);
}

#chat-ui {
  height: 
    calc(100% - (120px + env(safe-area-inset-top)));
  .message-container {
    cursor: pointer;
    display: inline-block;
    max-width: 100%;
    transition: height 200ms ease-in-out;
    .options {
      display: flex;
      align-items: center;
      margin-top: 8px;
      span {
        width: 38px;
        height: 38px;
        border-radius: 50%;
        background-color: #1c1c1c;
        transition: 
          transform 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275),
          opacity 100ms ease-in-out;
        transition-delay: 200ms;
        display: flex;
        justify-content: center;
        align-items: center;
        transform: translateX(-105%);
        margin: 0 5px;
        opacity: 0;
        pointer-events: none;
        i {
          transition: transform 200ms ease-in-out;
        }
        &:last-child {
          transform: translateX(-205%);
        }
      }
    }

    p {
      padding: 10px 25px;
      max-width: 50%;
      overflow-wrap: break-word;
      display: inline-block;
      border-radius: 9px;
      color: white;
      margin: 0;
      margin-top: 8px;
      box-sizing: border-box;

    
      animation-name: appear;
      animation-duration: 200ms;
      animation-timing-function: cubic-bezier(0.39, 0.575, 0.565, 1);
      animation-iteration-count: 1;

      transition: 
        transform 400ms cubic-bezier(0.175, 0.885, 0.32, 1.275),
        opacity 400ms cubic-bezier(0.175, 0.885, 0.32, 1.275);

      &.sent {
        background-color: #17895c;
        float: right;
        box-shadow: 1px 1px 1px rgb(30,30,30);

      }
      &.received {
        background-color: #1c1c1c;
        float: left;
        box-shadow: 1px 1px 1px rgb(30,30,30);

      }
    }
  }

  .message-container.received p.timestamp,
  .message-container.sent p.timestamp {
    font-size: 14px;
    color: rgba(255,255,255,0.2);
    padding: 10px 5px;
    width: 80px;
    text-align: center;
  }
  .message-container.sent p.timestamp {
    float: right;
  }
  .message-container.received p.timestamp {
    float: left;
  }

  .message-container.out {
    p:not(.timestamp) {
      opacity: 0.7;
      transform: scale(0.7);
    }
  }

  .message-container:hover {
    p:not(.timestamp) {
      transform: scale(1.05);
    }
    .options {
      span {
        transform: translateX(0);
        pointer-events: all;
        opacity: 1;
      }
      span:active {
        i {
          transform: scale(0.6);
        }
      }
    }
  }
}
